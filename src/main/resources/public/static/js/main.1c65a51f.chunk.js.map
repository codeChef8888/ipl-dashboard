{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","fetchTeam","a","fetch","process","response","json","data","title","value","totalMatches","totalWins","color","slice","map","id","REACT_APP_DATA_END_YEAR","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","console","log","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c65a51f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './MatchDetailCard.scss';\r\nexport const MatchDetailCard = ({ teamName, match }) => {\r\n    if (!match) return null;\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n    return (\r\n\r\n        <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'} >\r\n            <div>\r\n                <Link to={`/team/${otherTeam}`}>\r\n                    <span className=\"vs\">vs</span>\r\n                    <h1>{otherTeam}</h1>\r\n                </Link>\r\n\r\n                <h2 className=\"match-date\">{match.date}</h2>\r\n                <h3 className=\"match-venue\">at {match.venue}</h3>\r\n                <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\r\n            </div>\r\n            <div className=\"additional-detail\">\r\n                <h3>First Innings</h3>\r\n                <p>{match.team1}</p>\r\n                <h3>Second Innings</h3>\r\n                <p>{match.team2}</p>\r\n                <h3>Man of the Match</h3>\r\n                <p>{match.playerOfMatch}</p>\r\n                <h3>Umpires</h3>\r\n                <p>{match.umpire1},{match.umpire2}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './MatchSmallCard.scss';\r\n\r\nexport const MatchSmallCard = ({ teamName, match }) => {\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const isMatchWon= teamName===match.matchWinner;\r\n    return (\r\n        <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'} >\r\n\r\n            <Link to={`/team/${otherTeam}`}>\r\n                <span className=\"vs\">vs</span>\r\n                <h3 className=\"otherTeamName\"> {otherTeam}</h3>\r\n                <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n            </Link>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\n","import { React, useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { MatchSmallCard } from '../components/MatchSmallCard';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\nimport './TeamPage.scss';\r\n\r\n\r\nexport const TeamPage = () => {\r\n\r\n    const [team, setTeam] = useState({ matches: [] });\r\n    const { teamName } = useParams();\r\n    useEffect(\r\n        () => {\r\n            const fetchTeam = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\r\n                const data = await response.json();\r\n                setTeam(data);\r\n\r\n            };\r\n            fetchTeam();\r\n\r\n\r\n\r\n        }, [teamName]\r\n    );\r\n\r\n    return (\r\n     \r\n         <div className=\"TeamPage\">\r\n            <div className=\"team-name-section\">\r\n                <h1 className=\"team-name\">{team.teamName}</h1>\r\n            </div>\r\n            <div className=\"win-loss-section\">\r\n                Wins / Losses\r\n                <PieChart\r\n                    data={[\r\n                        { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d' },\r\n                        { title: 'Wins', value: team.totalWins, color: '#4da375' },\r\n                    ]}\r\n                />\r\n            </div>\r\n            <div className=\"match-detail-section\">\r\n                <h3>Latest Matches</h3>\r\n                <MatchDetailCard teamName={team.teamName} match={team.matches[0]} />\r\n            </div>\r\n            {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\r\n            <div className=\"more-link\">\r\n                <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More ></Link>\r\n            </div>\r\n        </div>\r\n            \r\n    );\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './YearSelector.scss';\r\n\r\nexport const YearSelector = ({teamName}) => {\r\n    let years = [];\r\n\r\n    const startDate = process.env.REACT_APP_DATE_START_YEAR;\r\n    const endDate = process.env.REACT_APP_DATE_END_YEAR;\r\n\r\n    for (let i = startDate; i <= endDate; i++) {\r\n        years.push(i);\r\n    }\r\n    return (\r\n        <ol className=\"YearSelector\">\r\n       { years.map(year =>(\r\n       \r\n         <li key={year} className=\"year-list\">\r\n           <Link to={`/team/${teamName}/matches/${year}`}>  {year}</Link>\r\n        </li>\r\n     \r\n       )\r\n         )}\r\n        </ol>\r\n      );\r\n}\r\n\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { MatchDetailCard } from \"../components/MatchDetailCard\";\r\nimport { YearSelector } from \"../components/YearSelector\";\r\nimport './MatchPage.scss';\r\n\r\nexport const MatchPage = () => {\r\n\r\n    const [matches, setMatches] = useState([]);\r\n    const { teamName, year } = useParams();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchMatches = async () => {\r\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\r\n            const data = await response.json();\r\n            setMatches(data);\r\n        }\r\n        fetchMatches();\r\n    }, [teamName, year])\r\n\r\n    return (\r\n        <div className=\"MatchPage\">\r\n            <div className=\"year-selector\" >\r\n                <h4>Select Year</h4>\r\n                <YearSelector key={year} teamName={teamName} />\r\n            </div>\r\n\r\n\r\n            <div>\r\n                <h1> {teamName} matches in {year}</h1>\r\n\r\n                {\r\n                    matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './TeamTile.scss';\r\n\r\nexport const TeamTile = ({teamName}) => {\r\n    return ( \r\n        <div className=\"TeamTile\">\r\n         <h2> <Link to={`/team/${teamName}`}>  {teamName}</Link> </h2>\r\n        </div>\r\n     );\r\n}\r\n \r\n","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { TeamTile } from \"../components/TeamTile\";\r\nimport './HomePage.scss';\r\nexport const HomePage = () => {\r\n\r\n    const [teams, setTeams] = useState([]);\r\n\r\n    useEffect(\r\n        () => {\r\n            const fetchAllTeams = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\r\n                const data = await response.json();\r\n                console.log(data);\r\n                setTeams(data);\r\n            };\r\n            fetchAllTeams();\r\n        }, []\r\n    );\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"HomePage\">\r\n            <div className=\"header-section\">\r\n                <h1 className=\"app-name\">IPL DashBoard</h1>\r\n            </div>\r\n            <div className=\"team-grid\">\r\n                {teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n\r\n\r\n\r\n}","import './App.scss';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n\n\n        <Switch>\n\n          <Route path=\"/team/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n\n          <Route path=\"/team/:teamName\">\n            <TeamPage />\n          </Route>\n          \n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n\n          \n          \n        </Switch>\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}